// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	dto "final-project/git.garena.com/sea-labs-id/batch-01/rasyid-wijaya/final-project-backend-papikos/dto"

	mock "github.com/stretchr/testify/mock"
)

// GamesService is an autogenerated mock type for the GamesService type
type GamesService struct {
	mock.Mock
}

// FlipCoin provides a mock function with given fields: userId, input
func (_m *GamesService) FlipCoin(userId uint, input *dto.FlipCoinsRequest) (*dto.FlipCoinsResponse, error) {
	ret := _m.Called(userId, input)

	var r0 *dto.FlipCoinsResponse
	if rf, ok := ret.Get(0).(func(uint, *dto.FlipCoinsRequest) *dto.FlipCoinsResponse); ok {
		r0 = rf(userId, input)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*dto.FlipCoinsResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uint, *dto.FlipCoinsRequest) error); ok {
		r1 = rf(userId, input)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewGamesService interface {
	mock.TestingT
	Cleanup(func())
}

// NewGamesService creates a new instance of GamesService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewGamesService(t mockConstructorTestingTNewGamesService) *GamesService {
	mock := &GamesService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
